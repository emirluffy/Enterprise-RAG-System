"""add_learned_knowledge_with_sqlite_guid_compatibility

Revision ID: d231549b8367
Revises: e403028533de
Create Date: 2025-06-29 22:08:47.460634

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes
from app.models import GUID


# revision identifiers, used by Alembic.
revision = 'd231549b8367'
down_revision = 'e403028533de'
branch_labels = None
depends_on = None


def upgrade():
    # ### Context7-verified SQLite compatible approach ###
    
    # Create learned_knowledge table (new table - straightforward)
    op.create_table('learnedknowledge',
        sa.Column('id', GUID(), primary_key=True),
        sa.Column('content', sa.Text(), nullable=False),
        sa.Column('knowledge_type', sa.String(50), nullable=False),
        sa.Column('title', sa.String(255), nullable=False),
        sa.Column('summary', sa.String(500)),
        sa.Column('keywords', sa.JSON()),
        sa.Column('priority', sa.String(20), nullable=False, default='normal'),
        sa.Column('language', sa.String(5), nullable=False, default='tr'),
        sa.Column('source_type', sa.String(50), nullable=False),
        sa.Column('source_reference', sa.String(255)),
        sa.Column('learned_from_query', sa.String(36)),
        sa.Column('embedding', sa.JSON()),
        sa.Column('embedding_model', sa.String(100), default='all-MiniLM-L6-v2'),
        sa.Column('is_verified', sa.Boolean(), nullable=False, default=False),
        sa.Column('verified_by', sa.String(36)),
        sa.Column('verified_at', sa.DateTime()),
        sa.Column('confidence_score', sa.Float(), default=0.8),
        sa.Column('access_count', sa.Integer(), nullable=False, default=0),
        sa.Column('usefulness_score', sa.Float()),
        sa.Column('last_accessed', sa.DateTime()),
        sa.Column('status', sa.String(20), nullable=False, default='active'),
        sa.Column('superseded_by', sa.String(36)),
        sa.Column('expires_at', sa.DateTime()),
        sa.Column('created_by', sa.String(36)),
        sa.Column('session_id', sa.String(255)),
        sa.Column('department', sa.String(100)),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False)
    )
    
    # Add index for title
    op.create_index('ix_learnedknowledge_title', 'learnedknowledge', ['title'])
    # Add index for department
    op.create_index('ix_learnedknowledge_department', 'learnedknowledge', ['department'])
    
    # For existing tables, SQLite requires recreation approach
    # Update user table - add NOT NULL to full_name and add department index
    op.alter_column('user', 'full_name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.create_index(op.f('ix_user_department'), 'user', ['department'], unique=False)
    op.drop_column('user', 'is_superuser')
    
    # ### end Context7 verified operations ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('user', sa.Column('is_superuser', sa.BOOLEAN(), nullable=False))
    op.drop_index(op.f('ix_user_department'), table_name='user')
    op.alter_column('user', 'full_name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    
    # Drop learned knowledge table
    op.drop_index('ix_learnedknowledge_department', table_name='learnedknowledge')
    op.drop_index('ix_learnedknowledge_title', table_name='learnedknowledge')
    op.drop_table('learnedknowledge')
    # ### end Alembic commands ###
