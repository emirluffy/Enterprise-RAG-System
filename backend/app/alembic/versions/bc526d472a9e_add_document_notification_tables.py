"""add_document_notification_tables

Revision ID: bc526d472a9e
Revises: 1a31ce608336
Create Date: 2025-06-28 22:48:48.787948

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes


# revision identifiers, used by Alembic.
revision = 'bc526d472a9e'
down_revision = '1a31ce608336'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('dailymetrics',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('active_users', sa.Integer(), nullable=False),
    sa.Column('new_users', sa.Integer(), nullable=False),
    sa.Column('total_queries', sa.Integer(), nullable=False),
    sa.Column('avg_session_duration', sa.Float(), nullable=True),
    sa.Column('avg_response_time', sa.Float(), nullable=True),
    sa.Column('error_rate', sa.Float(), nullable=True),
    sa.Column('successful_queries', sa.Integer(), nullable=False),
    sa.Column('failed_queries', sa.Integer(), nullable=False),
    sa.Column('documents_uploaded', sa.Integer(), nullable=False),
    sa.Column('total_documents', sa.Integer(), nullable=False),
    sa.Column('gemini_requests', sa.Integer(), nullable=False),
    sa.Column('gemini_tokens', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_dailymetrics_date'), 'dailymetrics', ['date'], unique=False)
    op.create_table('systemconfig',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('key', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('value', sa.Text(), nullable=True),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('is_public', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('key')
    )
    op.create_table('document',
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('filename', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('file_type', sqlmodel.sql.sqltypes.AutoString(length=10), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=False),
    sa.Column('content_preview', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('upload_status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('full_text', sa.Text(), nullable=True),
    sa.Column('doc_metadata', sa.JSON(), nullable=True),
    sa.Column('file_path', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('processed_at', sa.DateTime(), nullable=True),
    sa.Column('uploaded_by', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('department', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['uploaded_by'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_document_department'), 'document', ['department'], unique=False)
    op.create_index(op.f('ix_document_title'), 'document', ['title'], unique=False)
    op.create_table('querylog',
    sa.Column('query_text', sa.Text(), nullable=True),
    sa.Column('user_session', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('department', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('user_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('user_ip', sqlmodel.sql.sqltypes.AutoString(length=45), nullable=True),
    sa.Column('response_text', sa.Text(), nullable=True),
    sa.Column('model_used', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('response_time_ms', sa.Integer(), nullable=True),
    sa.Column('retrieved_chunks', sa.JSON(), nullable=True),
    sa.Column('confidence_score', sa.Float(), nullable=True),
    sa.Column('user_rating', sa.Integer(), nullable=True),
    sa.Column('user_feedback', sa.Text(), nullable=True),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_querylog_department'), 'querylog', ['department'], unique=False)
    op.create_table('documentchangenotification',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('document_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('notification_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('change_description', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('affected_systems', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('sent_at', sa.DateTime(), nullable=True),
    sa.Column('acknowledged_at', sa.DateTime(), nullable=True),
    sa.Column('acknowledged_by', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['document_id'], ['document.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_documentchangenotification_document_id'), 'documentchangenotification', ['document_id'], unique=False)
    op.create_table('documentchunk',
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('chunk_index', sa.Integer(), nullable=False),
    sa.Column('start_char', sa.Integer(), nullable=True),
    sa.Column('end_char', sa.Integer(), nullable=True),
    sa.Column('token_count', sa.Integer(), nullable=True),
    sa.Column('id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('document_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('embedding', sa.JSON(), nullable=True),
    sa.Column('embedding_model', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('chunk_metadata', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['document_id'], ['document.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_documentchunk_document_id'), 'documentchunk', ['document_id'], unique=False)
    op.create_table('documentupdatejob',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('document_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('job_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('progress_percentage', sa.Integer(), nullable=False),
    sa.Column('error_message', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('source_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('source_data', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('update_summary', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['document_id'], ['document.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_documentupdatejob_document_id'), 'documentupdatejob', ['document_id'], unique=False)
    op.create_table('documentversion',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('document_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('version_number', sa.Integer(), nullable=False),
    sa.Column('change_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('change_summary', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('is_current', sa.Boolean(), nullable=False),
    sa.Column('superseded_by', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('change_reason', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('effective_date', sa.DateTime(), nullable=True),
    sa.Column('notification_sent', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('created_by', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['document_id'], ['document.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_documentversion_document_id'), 'documentversion', ['document_id'], unique=False)
    op.create_table('querydocumentlink',
    sa.Column('query_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('document_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('relevance_score', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['document_id'], ['document.id'], ),
    sa.ForeignKeyConstraint(['query_id'], ['querylog.id'], ),
    sa.PrimaryKeyConstraint('query_id', 'document_id')
    )
    op.drop_table('item')
    op.add_column('user', sa.Column('department', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True))
    op.add_column('user', sa.Column('role', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False))
    op.add_column('user', sa.Column('avatar_url', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True))
    op.add_column('user', sa.Column('preferences', sa.JSON(), nullable=True))
    op.add_column('user', sa.Column('last_login', sa.DateTime(), nullable=True))
    op.add_column('user', sa.Column('total_queries', sa.Integer(), nullable=False))
    op.add_column('user', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.add_column('user', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.alter_column('user', 'full_name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('user', 'id',
               existing_type=sa.INTEGER(),
               type_=sa.UUID(as_uuid=False),
               existing_nullable=False)
    op.create_index(op.f('ix_user_department'), 'user', ['department'], unique=False)
    op.drop_column('user', 'is_superuser')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('user', sa.Column('is_superuser', sa.BOOLEAN(), nullable=False))
    op.drop_index(op.f('ix_user_department'), table_name='user')
    op.alter_column('user', 'id',
               existing_type=sa.UUID(as_uuid=False),
               type_=sa.INTEGER(),
               existing_nullable=False)
    op.alter_column('user', 'full_name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_column('user', 'updated_at')
    op.drop_column('user', 'created_at')
    op.drop_column('user', 'total_queries')
    op.drop_column('user', 'last_login')
    op.drop_column('user', 'preferences')
    op.drop_column('user', 'avatar_url')
    op.drop_column('user', 'role')
    op.drop_column('user', 'department')
    op.create_table('item',
    sa.Column('description', sa.VARCHAR(), nullable=True),
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('title', sa.VARCHAR(), nullable=False),
    sa.Column('owner_id', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('querydocumentlink')
    op.drop_index(op.f('ix_documentversion_document_id'), table_name='documentversion')
    op.drop_table('documentversion')
    op.drop_index(op.f('ix_documentupdatejob_document_id'), table_name='documentupdatejob')
    op.drop_table('documentupdatejob')
    op.drop_index(op.f('ix_documentchunk_document_id'), table_name='documentchunk')
    op.drop_table('documentchunk')
    op.drop_index(op.f('ix_documentchangenotification_document_id'), table_name='documentchangenotification')
    op.drop_table('documentchangenotification')
    op.drop_index(op.f('ix_querylog_department'), table_name='querylog')
    op.drop_table('querylog')
    op.drop_index(op.f('ix_document_title'), table_name='document')
    op.drop_index(op.f('ix_document_department'), table_name='document')
    op.drop_table('document')
    op.drop_table('systemconfig')
    op.drop_index(op.f('ix_dailymetrics_date'), table_name='dailymetrics')
    op.drop_table('dailymetrics')
    # ### end Alembic commands ###
